#!/usr/bin/env bash


function print_help
{
    echo "Usage: screen-brightness [COMMAND] [STEP]"
    echo "Commands:"
    echo "  up                   Increase brightness"
    echo "  down                 Decrease brightness"
    echo "  --help               Show this help message"
    echo
    echo "Optional:"
    echo "  STEP                 Amount to adjust brightness (default: $DEFAULT_STEP)"
    echo
    echo "Example:"
    echo "  screen-brightness up 200    # Increase brightness by 200"
    echo "  screen-brightness down      # Decrease brightness by default step"
    echo ""
    echo "Don't invoke as superuser (with sudo), the script will do that implicitly as needed."
}

# Find file by pattern with wildcard, but return nothing in case of no results (instead of literal wildcard string)
# E.g.   find_file_by_pattern "/foo/bar/*" => "/foo/bar/result_file"
#        find_file_by_pattern "/foo/baz/*" => ""
function find_file_by_pattern
{
    shopt -s nullglob # makes unmatched globs expand to nothing instead of staying as literal strings.
    files=($1)
    if (( ${#files[@]} )); then
        echo "${files[@]}"
    else
        echo ""
    fi
}

function has
{
    command -v "$1" >/dev/null 2>&1
}

function check_backlight_device
{
    if [[ -z "$BL_DEVICE" ]]; then
        echo "Backlight device not found."
        exit 1
   fi
}

function add_user_to_video_group
{
    if grep -q -v video <(groups); then
        sudo usermod -a -G video "$USER"
        exec su -l "$USER" # reload groups in this shell
        USE_SUDO=1
    fi
}

function add_udev_rule
{
    # the udev rule is only to be able to execute this without sudo
    # but it doesn't work (see FIXME below)

    UDEV_RULE_FILE=/etc/udev/rules.d/2041-allow-backlight-for-video-members

# IFS='' read -r -d '' UDEV_RULE <<"EOF"
# ACTION=="add", SUBSYSTEM=="backlight", KERNEL=="intel_backlight", GROUP="video", MODE="0664"
# EOF

IFS='' read -r UDEV_RULE <<EOF
SUBSYSTEM=="backlight", ACTION=="add",
RUN+="/bin/chgrp video $BL_DEVICE",
RUN+="/bin/chmod g+w $BL_DEVICE"
EOF

    # sudo rm "$UDEV_RULE_FILE"
    if [[ ! -f "$UDEV_RULE_FILE" ]]; then
        echo "Creating $UDEV_RULE_FILE"
        echo "$UDEV_RULE" | sudo tee "$UDEV_RULE_FILE"
        sudo udevadm control --reload-rules && sudo udevadm trigger
        USE_SUDO=1
    fi
}

function adjust_directly_without_sudo
{
    NEW_VALUE="$1"
    echo "Setting brightness without sudo..."
    echo "$NEW_VALUE" > "$BL_DEVICE" # FIXME
}

function adjust_directly_with_sudo
{
    NEW_VALUE="$1"
    echo "Setting brightness with sudo..."
    echo "$NEW_VALUE" | sudo tee "$BL_DEVICE"
}

function adjust_directly
{
    CURRENT_VALUE=$(cat "$BL_DEVICE")
    MAX_VALUE=$(cat "$BL_MAX")
    STEP="${2:-$DEFAULT_STEP}"
    if [[ "$1" == "up" ]]; then
        NEW_VALUE=$((CURRENT_VALUE+STEP))
    elif [[ "$1" == "down" ]]; then
        NEW_VALUE=$((CURRENT_VALUE-STEP))
    else
        echo "Screen brightness is at $CURRENT_VALUE. Maximum is $MAX_VALUE."
        print_help
        exit 1
    fi
    if [[ -n "$USE_SUDO" ]]; then
        adjust_directly_without_sudo "$NEW_VALUE"
    else
        adjust_directly_without_sudo "$NEW_VALUE" || adjust_directly_with_sudo "$NEW_VALUE"
    fi

}

function adjust_with_xbacklight
{
    STEP="${2:-$DEFAULT_STEP}"
    if [[ "$1" == "up" ]]; then
        xbacklight -inc "$STEP"
    elif [[ "$1" == "down" ]]; then
        xbacklight -dec "$STEP"
    fi
}

function main
{
    if [[ "$1" == "--help" ]]; then
        print_help
        exit 0
    fi

    if has xbacklight; then
        adjust_with_xbacklight "$@"
    else
        check_backlight_device
        add_user_to_video_group
        add_udev_rule
        adjust_directly "$@"
    fi
}

set -e

## TODO screen brightness for separate outputs

BL_DEVICE=$(find_file_by_pattern "/sys/class/backlight/*/brightness")
BL_MAX=$(find_file_by_pattern "/sys/class/backlight/*/max_brightness")
DEFAULT_STEP=300


main "$@"
